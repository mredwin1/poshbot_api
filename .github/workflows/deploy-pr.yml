name: Build and Deploy PR

on:
  issue_comment:
    types: [created]

jobs:
  build_and_deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Create deployment
        id: create_deployment
        uses: alexjurkiewicz/pr-comment-github-deployment@master
        with:
          trigger_phrase: "/deploy"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set deployment status to in progress
        id: start_deployment
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/:repository/deployments/:deployment/statuses
          repository: ${{ github.repository }}
          deployment: ${{ steps.create_deployment.outputs.deployment_id }}
          environment_url: https://example.com
          log_url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
          state: in_progress
          mediaType: '{"previews": ["flash", "ant-man"]}'
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'

      - name: Generate Docker image tag
        id: generate_tag
        run: echo "::set-output name=tag::pr-$(echo $GITHUB_REF | awk -F'/' '{print $3}')"

      - name: Build and Push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile  # Update with the correct path to your Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository }}/poshbot-api:${{ steps.generate_tag.outputs.tag }}
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          DOCKER_REGISTRY: ghcr.io

      - name: Deploy the pull request
        run: |
          # Add your deployment logic here, referencing the specific Docker image tag
          # For example:
          # docker run -d ghcr.io/${{ github.repository }}/your-image-name:${{ steps.generate_tag.outputs.tag }}
          sleep 30
          # always succeed
          exit 0

      - name: Set deployment status to success
        id: successful_deployment
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/:repository/deployments/:deployment/statuses
          repository: ${{ github.repository }}
          deployment: ${{ steps.create_deployment.outputs.deployment_id }}
          environment_url: https://example.com
          log_url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
          mediaType: '{"previews": ["ant-man"]}'
          state: success
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'