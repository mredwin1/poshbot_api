name: Build and Deploy PR

on:
  issue_comment:
    types: [created]

jobs:
  build_and_deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      issues: read
      pull-requests: write
      statuses: write
      packages: write

    steps:
      - name: Pull Request Comment Branch
        uses: xt0rted/pull-request-comment-branch@v2.0.0
        id: comment-branch

      - name: Set commit status to pending
        uses: myrotvorets/set-commit-status-action@v2.0.0
        with:
          sha: ${{ steps.comment-branch.outputs.head_sha }}
          status: pending
          description: 'Building...'

      - name: Checkout PR branch
        uses: actions/checkout@v3
        with:
          ref: ${{ steps.comment-branch.outputs.head_ref }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

#      - name: Build and Push Docker image
#        uses: docker/build-push-action@v2
#        with:
#          context: .
#          file: Dockerfile
#          push: true
#          tags: |
#            ghcr.io/${{ github.repository }}/poshbot-api:pr-${{ steps.comment-branch.outputs.head_ref }}

      - name: Update commit status description
        uses: myrotvorets/set-commit-status-action@v2.0.0
        with:
          sha: ${{ steps.comment-branch.outputs.head_sha }}
          status: pending
          description: 'Deploying...'

      - name: Authenticate with AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::069773459506:role/github-actions
          aws-region: us-east-1

      - name: Deploy Cloudformation stack
        id: cloudformation-stack
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: poshbot-pr-${{ steps.comment-branch.outputs.head_ref }}
          template: deployment_template.yml
          no-fail-on-empty-changeset: "1"
          capabilities: CAPABILITY_IAM,CAPABILITY_NAMED_IAM
          parameter-overrides: >-
            GlobalResourcesStackName=poshbot-global-resources,
            Environment=pr-${{ steps.comment-branch.outputs.head_ref }},
            Version=pr-${{ steps.comment-branch.outputs.head_ref }},
            DockerImage=ghcr.io/${{ github.repository }}/poshbot-api:pr-${{ steps.comment-branch.outputs.head_ref }}
          tags: >-
            [
              { "Key": "Environment", "Value": "pr-${{ steps.comment-branch.outputs.head_ref }}" },
              { "Key": "AppManagerCFNStackKey", "Value": "pr-${{ steps.comment-branch.outputs.head_ref }}" },
              { "Key": "Application", "Value": "poshbot" },
              { "Key": "Version", "Value": "pr-${{ steps.comment-branch.outputs.head_ref }}" }
            ]

      - name: Force re-deploy ecs tasks
        run: |
          aws ecs update-service --cluster ${{ steps.cloudformation-stack.outputs.ClusterName }} --service ${{ steps.cloudformation-stack.outputs.BeatService }} --force-new-deployment
          aws ecs update-service --cluster ${{ steps.cloudformation-stack.outputs.ClusterName }} --service ${{ steps.cloudformation-stack.outputs.APIService }} --force-new-deployment
          aws ecs update-service --cluster ${{ steps.cloudformation-stack.outputs.ClusterName }} --service ${{ steps.cloudformation-stack.outputs.MaintenanceService }} --force-new-deployment
          aws ecs update-service --cluster ${{ steps.cloudformation-stack.outputs.ClusterName }} --service ${{ steps.cloudformation-stack.outputs.GeneralService }} --force-new-deployment

      - name: Retrieve password
        id: retrieve-password
        run: |
          secret_value=$(aws secretsmanager get-secret-value --secret-id ${{ steps.cloudformation-stack.outputs.MasterUserPasswordArn }} --query 'SecretString' --output text)
          echo "::set-output name=password::$secret_value"

      - uses: mshick/add-pr-comment@v2
        with:
          message: |
            Deployment successful details below:
              Backend URL - ${{ steps.cloudformation-stack.outputs.BackendURL }}
              Backend Username - admin
              Backend Password - ${{ steps.retrieve-password.outputs.password }}

      - name: Set final commit status
        uses: myrotvorets/set-commit-status-action@v2.0.0
        if: always()
        with:
          sha: ${{ steps.comment-branch.outputs.head_sha }}
          status: ${{ job.status }}